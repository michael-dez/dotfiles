# Configures WSL Ubuntu environment
# Install requirements: ansible-galaxy collection install community.general
# Run with: ansible-playbook -K install.yml
- hosts: localhost
  connection: local
  become: no
  gather_facts: yes
  vars:
    username: "{{ ansible_user_id }}"
    packages:
      - build-essential
      - curl
      - git
      - tmux
      - unzip
      - wget
      - zsh
      - npm
  tasks:
    - name: "Arch: Upgrade all installed packages"
      when: ansible_facts['distribution'] == 'Archlinux'
      become: yes
      pacman:
        update_cache: yes
        upgrade: yes

    - name: "Arch: Install from package list"
      when: ansible_facts['distribution'] == 'Archlinux'
      become: yes
      package:
        name: "{{ item }}"
        state: latest
      with_items: "{{ lookup('file', 'bak/pacman-export.txt').splitlines() }}"

    - name: "Ubuntu: Update apt cache, install dependencies and upgrade all installed packages"
      when: ansible_facts['distribution'] == 'Ubuntu'
      become: yes
      apt:
        update_cache: yes
        state: latest
        name: "{{ packages }}"

    - name: "Ubuntu: Install brew"
      become: no
      when: ansible_facts['distribution'] == 'Ubuntu'
      shell: NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      args:
        creates: /home/linuxbrew/.linuxbrew

    - name: "Ubuntu: Add brew to PATH"
      become: no
      when: ansible_facts['distribution'] == 'Ubuntu'
      lineinfile:
        path: /home/{{ username }}/.bashrc
        line: 'eval /home/linuxbrew/.linuxbrew/bin/brew shellenv'

    - name: "Ubuntu: Add hashicorp tap for packer"
      become: no
      when: ansible_facts['distribution'] == 'Ubuntu'
      shell: /home/linuxbrew/.linuxbrew/bin/brew tap hashicorp/tap
      args:
        creates: "/home/linuxbrew/.linuxbrew/Library/Taps/hashicorp/homebrew-tap"

    - name: "Ubuntu: Install brew packages"
      become: no
      when: ansible_facts['distribution'] == 'Ubuntu'
      shell: /home/linuxbrew/.linuxbrew/bin/brew install {{ item.package }}
      args:
        creates: "/home/linuxbrew/.linuxbrew/bin/{{ item.binary }}"
      with_items:
        - { package: "nvim", binary: "nvim" }
        - { package: "terraform", binary: "terraform" }
        - { package: "fzf", binary: "fzf" }
        - { package: "ripgrep", binary: "rg" }
        - { package: "azure-cli", binary: "az" }
        - { package: "hashicorp/tap/packer", binary: "packer" }

    - name: "Install npm packages globally"
      become: no
      npm:
        name: "{{ item }}"
        global: yes
        state: present
        path: /home/{{ username }}/.local
      with_items:
        - yarn

    # Dotfile symlinking tasks
    - name: "Create symlinks for home directory dotfiles"
      become: no
      file:
        src: "{{ ansible_env.PWD }}/{{ item }}"
        dest: "{{ ansible_env.HOME }}/.{{ item }}"
        state: link
        force: yes
      with_items:
        - vimrc
        - tmux.conf
        - zshenv
        - zshrc
        - zshrc.pre-oh-my-zsh
        - p10k.zsh

    - name: "Create config directories for XDG config files"
      become: no
      file:
        path: "{{ ansible_env.HOME }}/.config/{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - nvim
        - picom
        - texinfo
        - xfce4/terminal
        - xfce4/xfconf/xfce-perchannel-xml

    - name: "Create symlinks for XDG config files"
      become: no
      file:
        src: "{{ ansible_env.PWD }}/{{ item.src }}"
        dest: "{{ ansible_env.HOME }}/.config/{{ item.dest }}"
        state: link
        force: yes
      with_items:
        - { src: "nvim/init.lua", dest: "nvim/init.lua" }
        - { src: "picom/picom.conf", dest: "picom/picom.conf" }
        - { src: "picom/picom-animations.conf", dest: "picom/picom-animations.conf" }
        - { src: "texinfo/infokey", dest: "texinfo/infokey" }
        - { src: "xfce4/terminal/terminalrc", dest: "xfce4/terminal/terminalrc" }
        - { src: "xfce4/terminal/accels.scm", dest: "xfce4/terminal/accels.scm" }
        - { src: "xfce4/xfconf/xfce-perchannel-xml/xfce4-terminal.xml", dest: "xfce4/xfconf/xfce-perchannel-xml/xfce4-terminal.xml" }

    - name: "Change user shell to zsh"
      become: yes
      user:
        name: "{{ username }}"
        shell: /usr/bin/zsh

    - name: "Ubuntu: Add brew to PATH"
      become: no
      when: ansible_facts['distribution'] == 'Ubuntu'
      lineinfile:
        path: /home/{{ username }}/.zshrc
        line: 'eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)'
